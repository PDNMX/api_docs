{
   "openapi":"3.0.1",
   "info":{
      "title":"Sistema 3 v2",
      "description": "API DE INTERCONEXIÓN DEL SISTEMA NACIONAL DE SERVIDORES PÚBLICOS Y PARTICULARES SANCIONADOS DE LA PLATAFORMA DIGITAL NACIONAL",
      "version":"2.0"
   },
   "paths":{
      "/auth/login":{
         "post":{
            "summary":"Retrieve a Temporary Access Token",
            "description":"Retrieve a Temporary Access Token",
            "tags":[
               "Authentication"
            ],
            "operationId":"login",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "email",
                           "password"
                        ],
                        "properties":{
                           "email":{
                              "type":"string",
                              "example":"admin@example.com",
                              "description":"Email address of the user you're retrieving the access token for."
                           },
                           "password":{
                              "type":"string",
                              "description":"Password of the user.",
                              "format":"password",
                              "example":"password"
                           },
                           "mode":{
                              "type":"string",
                              "enum":[
                                 "json",
                                 "cookie",
                                 "session"
                              ],
                              "default":"json",
                              "description":"Whether to retrieve the refresh token in the JSON response, or in a httpOnly cookie."
                           },
                           "otp":{
                              "type":"string",
                              "description":"The user's one-time-password (if MFA is enabled)."
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Successful authentification",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "data":{
                                 "type":"object",
                                 "properties":{
                                    "access_token":{
                                       "type":"string",
                                       "example":"eyJhbGciOiJI..."
                                    },
                                    "expires":{
                                       "type":"integer",
                                       "example":900
                                    },
                                    "refresh_token":{
                                       "type":"string",
                                       "example":"yuOJkjdPXMd..."
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/auth/refresh":{
         "post":{
            "summary":"Refresh Token",
            "description":"Refresh a Temporary Access Token.",
            "tags":[
               "Authentication"
            ],
            "operationId":"refresh",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "refresh_token":{
                              "type":"string",
                              "example":"eyJ0eXAiOiJKV...",
                              "description":"JWT access token you want to refresh. This token can't be expired."
                           },
                           "mode":{
                              "type":"string",
                              "enum":[
                                 "json",
                                 "cookie",
                                 "session"
                              ],
                              "default":"json",
                              "description":"Whether to submit and retrieve the refresh token in the JSON response, or in a httpOnly cookie."
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Successful request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "data":{
                                 "type":"object",
                                 "properties":{
                                    "access_token":{
                                       "type":"string",
                                       "example":"eyJhbGciOiJI..."
                                    },
                                    "expires":{
                                       "type":"integer",
                                       "example":900
                                    },
                                    "refresh_token":{
                                       "type":"string",
                                       "example":"Gy-caJMpmGTA..."
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "$ref":"#/components/responses/UnauthorizedError"
               }
            }
         }
      },
      "/auth/logout":{
         "post":{
            "summary":"Log Out",
            "description":"Log Out",
            "tags":[
               "Authentication"
            ],
            "operationId":"logout",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "refresh_token":{
                              "type":"string",
                              "example":"eyJ0eXAiOiJKV...",
                              "description":"The refresh token to invalidate. If you have the refresh token in a cookie through /auth/login, you don't have to submit it here."
                           },
                           "mode":{
                              "type":"string",
                              "enum":[
                                 "json",
                                 "cookie",
                                 "session"
                              ],
                              "description":"Whether the refresh token is submitted in the JSON response, or in a httpOnly cookie."
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Request successful"
               }
            }
         }
      },
      "/items/faltas_administrativas_graves":{
         "get":{
            "summary":"List Items",
            "description":"List the faltas_administrativas_graves items.",
            "tags":[
               "Items",
               "ItemsFaltasAdministrativasGraves"
            ],
            "operationId":"readItemsFaltasAdministrativasGraves",
            "security":[
               {
                  "Auth":[
                     
                  ]
               }
            ],
            "parameters":[
               {
                  "$ref":"#/components/parameters/Fields"
               },
               {
                  "$ref":"#/components/parameters/Limit"
               },
               {
                  "$ref":"#/components/parameters/Meta"
               },
               {
                  "$ref":"#/components/parameters/Offset"
               },
               {
                  "$ref":"#/components/parameters/Sort"
               },
               {
                  "$ref":"#/components/parameters/Filter"
               },
               {
                  "$ref":"#/components/parameters/Search"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "data":{
                                 "type":"array",
                                 "items":{
                                    "type":"object",
                                    "$ref":"#/components/schemas/ItemsFaltasAdministrativasGraves"
                                 }
                              },
                              "meta":{
                                 "$ref":"#/components/schemas/x-metadata"
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "$ref":"#/components/responses/UnauthorizedError"
               }
            }
         }
      },
      "/items/faltas_administrativas_graves/{id}":{
         "get":{
            "summary":"Retrieve an Item",
            "description":"Retrieve a single faltas_administrativas_graves item by unique identifier.",
            "tags":[
               "Items",
               "ItemsFaltasAdministrativasGraves"
            ],
            "operationId":"readSingleItemsFaltasAdministrativasGraves",
            "parameters":[
               {
                  "$ref":"#/components/parameters/Fields"
               },
               {
                  "$ref":"#/components/parameters/Meta"
               },
               {
                  "$ref":"#/components/parameters/Version"
               },
               {
                  "name":"id",
                  "description":"Index of the item.",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "oneOf":[
                        {
                           "type":"integer",
                           "description":"Incremental index of the item.",
                           "example":1
                        },
                        {
                           "type":"string",
                           "description":"Unique identifier of the item.",
                           "example":"8cbb43fe-4cdf-4991-8352-c461779cec02"
                        }
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "data":{
                                 "type":"object",
                                 "$ref":"#/components/schemas/ItemsFaltasAdministrativasGraves"
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "$ref":"#/components/responses/UnauthorizedError"
               },
               "404":{
                  "$ref":"#/components/responses/NotFoundError"
               }
            }
         }
      },
      "/items/faltas_graves_personas_morales":{
         "get":{
            "summary":"List Items",
            "description":"List the faltas_graves_personas_morales items.",
            "tags":[
               "Items",
               "ItemsFaltasGravesPersonasMorales"
            ],
            "operationId":"readItemsFaltasGravesPersonasMorales",
            "security":[
               {
                  "Auth":[
                     
                  ]
               }
            ],
            "parameters":[
               {
                  "$ref":"#/components/parameters/Fields"
               },
               {
                  "$ref":"#/components/parameters/Limit"
               },
               {
                  "$ref":"#/components/parameters/Meta"
               },
               {
                  "$ref":"#/components/parameters/Offset"
               },
               {
                  "$ref":"#/components/parameters/Sort"
               },
               {
                  "$ref":"#/components/parameters/Filter"
               },
               {
                  "$ref":"#/components/parameters/Search"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "data":{
                                 "type":"array",
                                 "items":{
                                    "type":"object",
                                    "$ref":"#/components/schemas/ItemsFaltasGravesPersonasMorales"
                                 }
                              },
                              "meta":{
                                 "$ref":"#/components/schemas/x-metadata"
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "$ref":"#/components/responses/UnauthorizedError"
               }
            }
         }
      },
      "/items/faltas_graves_personas_morales/{id}":{
         "get":{
            "summary":"Retrieve an Item",
            "description":"Retrieve a single faltas_graves_personas_morales item by unique identifier.",
            "tags":[
               "Items",
               "ItemsFaltasGravesPersonasMorales"
            ],
            "operationId":"readSingleItemsFaltasGravesPersonasMorales",
            "parameters":[
               {
                  "$ref":"#/components/parameters/Fields"
               },
               {
                  "$ref":"#/components/parameters/Meta"
               },
               {
                  "$ref":"#/components/parameters/Version"
               },
               {
                  "name":"id",
                  "description":"Index of the item.",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "oneOf":[
                        {
                           "type":"integer",
                           "description":"Incremental index of the item.",
                           "example":1
                        },
                        {
                           "type":"string",
                           "description":"Unique identifier of the item.",
                           "example":"8cbb43fe-4cdf-4991-8352-c461779cec02"
                        }
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "data":{
                                 "type":"object",
                                 "$ref":"#/components/schemas/ItemsFaltasGravesPersonasMorales"
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "$ref":"#/components/responses/UnauthorizedError"
               },
               "404":{
                  "$ref":"#/components/responses/NotFoundError"
               }
            }
         }
      },
      "/items/resolucion":{
         "get":{
            "summary":"List Items",
            "description":"List the resolucion items.",
            "tags":[
               "Items",
               "ItemsResolucion"
            ],
            "operationId":"readItemsResolucion",
            "security":[
               {
                  "Auth":[
                     
                  ]
               }
            ],
            "parameters":[
               {
                  "$ref":"#/components/parameters/Fields"
               },
               {
                  "$ref":"#/components/parameters/Limit"
               },
               {
                  "$ref":"#/components/parameters/Meta"
               },
               {
                  "$ref":"#/components/parameters/Offset"
               },
               {
                  "$ref":"#/components/parameters/Sort"
               },
               {
                  "$ref":"#/components/parameters/Filter"
               },
               {
                  "$ref":"#/components/parameters/Search"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "data":{
                                 "type":"array",
                                 "items":{
                                    "type":"object",
                                    "$ref":"#/components/schemas/ItemsResolucion"
                                 }
                              },
                              "meta":{
                                 "$ref":"#/components/schemas/x-metadata"
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "$ref":"#/components/responses/UnauthorizedError"
               }
            }
         }
      },
      "/items/resolucion/{id}":{
         "get":{
            "summary":"Retrieve an Item",
            "description":"Retrieve a single resolucion item by unique identifier.",
            "tags":[
               "Items",
               "ItemsResolucion"
            ],
            "operationId":"readSingleItemsResolucion",
            "parameters":[
               {
                  "$ref":"#/components/parameters/Fields"
               },
               {
                  "$ref":"#/components/parameters/Meta"
               },
               {
                  "$ref":"#/components/parameters/Version"
               },
               {
                  "name":"id",
                  "description":"Index of the item.",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "oneOf":[
                        {
                           "type":"integer",
                           "description":"Incremental index of the item.",
                           "example":1
                        },
                        {
                           "type":"string",
                           "description":"Unique identifier of the item.",
                           "example":"8cbb43fe-4cdf-4991-8352-c461779cec02"
                        }
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "data":{
                                 "type":"object",
                                 "$ref":"#/components/schemas/ItemsResolucion"
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "$ref":"#/components/responses/UnauthorizedError"
               },
               "404":{
                  "$ref":"#/components/responses/NotFoundError"
               }
            }
         }
      }
   },
   "components":{
      "schemas":{
         "Query":{
            "type":"object",
            "properties":{
               "fields":{
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "description":"Control what fields are being returned in the object.",
                  "example":[
                     "*",
                     "*.*"
                  ]
               },
               "filter":{
                  "type":"object",
                  "example":{
                     "<field>":{
                        "<operator>":"<value>"
                     }
                  }
               },
               "search":{
                  "description":"Filter by items that contain the given search query in one of their fields.",
                  "type":"string"
               },
               "sort":{
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "description":"How to sort the returned items.",
                  "example":[
                     "-date_created"
                  ]
               },
               "limit":{
                  "type":"number",
                  "description":"Set the maximum number of items that will be returned"
               },
               "offset":{
                  "type":"number",
                  "description":"How many items to skip when fetching data."
               },
               "page":{
                  "type":"number",
                  "description":"Cursor for use in pagination. Often used in combination with limit."
               },
               "deep":{
                  "type":"object",
                  "description":"Deep allows you to set any of the other query parameters on a nested relational dataset.",
                  "example":{
                     "related_articles":{
                        "_limit":3
                     }
                  }
               }
            }
         },
         "x-metadata":{
            "type":"object",
            "properties":{
               "total_count":{
                  "description":"Returns the total item count of the collection you're querying.",
                  "type":"integer"
               },
               "filter_count":{
                  "description":"Returns the item count of the collection you're querying, taking the current filter/search parameters into account.",
                  "type":"integer"
               }
            }
         },
         "ItemsFaltasAdministrativasGraves":{
            "type":"object",
            "properties":{
               "id":{
                  "nullable":false,
                  "type":"string",
                  "format":"uuid"
               },
               "user_created":{
                  "nullable":true,
                  "type":"string",
                  "format":"uuid"
               },
               "date_created":{
                  "nullable":true,
                  "type":"string",
                  "format":"timestamp"
               },
               "user_updated":{
                  "nullable":true,
                  "type":"string",
                  "format":"uuid"
               },
               "date_updated":{
                  "nullable":true,
                  "type":"string",
                  "format":"timestamp"
               },
               "fecha":{
                  "nullable":true,
                  "description":"Indicar la fecha en la que se registra la información",
                  "type":"string",
                  "format":"date"
               },
               "expediente":{
                  "nullable":true,
                  "description":"Registrar el número de expediente en el que recae la resolución",
                  "type":"string"
               },
               "observaciones":{
                  "nullable":true,
                  "description":"En este espacio se podrán realizar las aclaraciones u observaciones que se consideren pertinentes respecto de alguno o algunos de los apartados del Formato.",
                  "type":"string"
               },
               "resolucion":{
                  "nullable":true,
                  "description":"En el presente apartado se establecen los datos concernientes a la resolución firme",
                  "oneOf":[
                     {
                        "type":"integer"
                     },
                     {
                        "$ref":"#/components/schemas/ItemsResolucion"
                     }
                  ]
               },
               "origenProcedimiento":{
                  "nullable":true,
                  "description":"En el presente apartado se deberá señalar el motivo que dio origen a la investigación por la comisión de la falta administrativa grave",
                  "type":"integer"
               },
               "entePublico":{
                  "nullable":true,
                  "type":"integer"
               },
               "datosGenerales":{
                  "nullable":true,
                  "description":"En el presente apartado se establecen los datos concernientes a la persona servidora pública que cometió la falta administrativa",
                  "type":"integer"
               },
               "empleoCargoComision":{
                  "nullable":true,
                  "description":"En el presente apartado se establecen los datos concernientes al empleo, cargo o comisión que ostenta u ostentaba la persona servidora pública al momento de cometer la falta administrativa",
                  "type":"integer"
               }
            },
            "x-collection":"faltas_administrativas_graves"
         },
         "ItemsFaltasGravesPersonasMorales":{
            "type":"object",
            "properties":{
               "id":{
                  "nullable":false,
                  "type":"string",
                  "format":"uuid"
               },
               "user_created":{
                  "nullable":true,
                  "type":"string",
                  "format":"uuid"
               },
               "date_created":{
                  "nullable":true,
                  "type":"string",
                  "format":"timestamp"
               },
               "user_updated":{
                  "nullable":true,
                  "type":"string",
                  "format":"uuid"
               },
               "date_updated":{
                  "nullable":true,
                  "type":"string",
                  "format":"timestamp"
               },
               "datosGenerales":{
                  "nullable":true,
                  "description":"En el presente apartado se establecen los datos concernientes a la persona moral sancionada",
                  "type":"integer"
               },
               "datosDirGeneralReprLegal":{
                  "nullable":true,
                  "description":"En el presente apartado se establecen los datos del director general y del representante legal de la persona moral",
                  "type":"integer"
               },
               "dondeCometioLaFalta":{
                  "nullable":true,
                  "description":"En el presente apartado se establecen (si aplica) los datos del Ente público donde se cometió la falta administrativa",
                  "type":"integer"
               },
               "fecha":{
                  "nullable":true,
                  "description":"Indicar la fecha en la que se registra la información",
                  "type":"string",
                  "format":"date"
               },
               "expediente":{
                  "nullable":true,
                  "description":"Registrar el número de expediente en el que recae la resolución",
                  "type":"string"
               },
               "observaciones":{
                  "nullable":true,
                  "description":"En este espacio podrá realizar las aclaraciones u observaciones que considere pertinentes respecto de alguno o algunos de los apartados del documento",
                  "type":"string"
               },
               "origenProcedimiento":{
                  "nullable":true,
                  "description":"En el presente apartado se deberá señalar el motivo que dio origen a la investigación por actos vinculados con faltas administrativas graves por parte de la persona moral",
                  "type":"integer"
               },
               "entePublico":{
                  "nullable":true,
                  "type":"integer"
               },
               "resolucion":{
                  "nullable":true,
                  "description":"En el presente apartado se establecen los datos concernientes a la resolución firme",
                  "type":"integer"
               }
            },
            "x-collection":"faltas_graves_personas_morales"
         },
         "ItemsResolucion":{
            "type":"object",
            "properties":{
               "id":{
                  "nullable":false,
                  "type":"integer"
               },
               "tituloResolucion":{
                  "nullable":true,
                  "description":"Escribir el nombre del documento que resuelve el procedimiento de responsabilidad administrativa y que ha quedado firme, sin abreviaturas, sin acentos ni signos especiales",
                  "type":"string"
               },
               "fechaResolucion":{
                  "nullable":true,
                  "description":"Colocar la fecha en la que se emite la resolución definitiva",
                  "type":"string",
                  "format":"date"
               },
               "fechaNotificacion":{
                  "nullable":true,
                  "description":"Indicar la fecha en que se notifica la resolución definitiva a la persona servidora pública sancionada",
                  "type":"string",
                  "format":"date"
               },
               "urlResolucion":{
                  "nullable":true,
                  "description":"Colocar el enlace de la versión pública de la resolución emitida por la autoridad a la que corresponde la sanción",
                  "type":"string"
               },
               "fechaResolucionFirme":{
                  "nullable":true,
                  "description":"Colocar la fecha en que adquirió firmeza la resolución de la persona servidora pública",
                  "type":"string",
                  "format":"date"
               },
               "fechaNotificacionFirme":{
                  "nullable":true,
                  "description":"Indicar la fecha en que se notifica a la persona servidora pública que la resolución ha quedado firme",
                  "type":"string",
                  "format":"date"
               },
               "urlResolucionFirme":{
                  "nullable":true,
                  "description":"Colocar el enlace de la versión pública del acuerdo o determinación que dicte la autoridad competente en la que declara que la resolución definitiva ha quedado firme",
                  "type":"string"
               },
               "autoridadResolutora":{
                  "nullable":true,
                  "description":"Indicar el nombre de la autoridad facultada para dictar la sanción",
                  "type":"string"
               },
               "autoridadInvestigadora":{
                  "nullable":true,
                  "description":"Especificar el nombre de la autoridad encargada de la investigación de la falta administrativa grave",
                  "type":"string"
               },
               "autoridadSusbstanciadora":{
                  "nullable":true,
                  "description":"Señalar el nombre de la autoridad substanciadora del procedimiento",
                  "type":"string"
               },
               "fechaEjecucion":{
                  "nullable":true,
                  "description":"Anotar la fecha en la que se ejecutó la sanción a la persona servidora pública.  <p>Si al momento de registrar la información la autoridad no cuenta con el dato señalado en el presente numeral, este podrá registrarse posteriormente mediante una actualización de su registro",
                  "type":"string",
                  "format":"date"
               },
               "ordenJurisdiccional":{
                  "nullable":true,
                  "description":"Seleccionar la opción correspondiente al orden jurisdiccional del Ente público que emitió la resolución",
                  "type":"string"
               }
            },
            "x-collection":"resolucion"
         }
      },
      "parameters":{
         "Id":{
            "description":"Index",
            "name":"id",
            "in":"path",
            "required":true,
            "schema":{
               "type":"integer"
            }
         },
         "UUId":{
            "description":"Unique identifier for the object.",
            "name":"id",
            "in":"path",
            "required":true,
            "schema":{
               "example":"8cbb43fe-4cdf-4991-8352-c461779cec02",
               "type":"string"
            }
         },
         "Collection":{
            "description":"Collection of which you want to retrieve the items from.",
            "name":"collection",
            "in":"path",
            "required":true,
            "schema":{
               "type":"string"
            }
         },
         "Search":{
            "description":"Filter by items that contain the given search query in one of their fields.",
            "in":"query",
            "name":"search",
            "required":false,
            "schema":{
               "type":"string"
            }
         },
         "Page":{
            "description":"Cursor for use in pagination. Often used in combination with limit.",
            "in":"query",
            "name":"page",
            "required":false,
            "schema":{
               "type":"integer"
            }
         },
         "Offset":{
            "description":"How many items to skip when fetching data.",
            "in":"query",
            "name":"offset",
            "required":false,
            "schema":{
               "type":"integer"
            }
         },
         "Sort":{
            "description":"How to sort the returned items. `sort` is a CSV of fields used to sort the fetched items. Sorting defaults to ascending (ASC) order but a minus sign (` - `) can be used to reverse this to descending (DESC) order. Fields are prioritized by their order in the CSV. You can also use a ` ? ` to sort randomly.\n",
            "in":"query",
            "name":"sort",
            "required":false,
            "explode":false,
            "schema":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            }
         },
         "Meta":{
            "description":"What metadata to return in the response.",
            "in":"query",
            "name":"meta",
            "required":false,
            "schema":{
               "type":"string"
            }
         },
         "Limit":{
            "description":"A limit on the number of objects that are returned.",
            "in":"query",
            "name":"limit",
            "required":false,
            "schema":{
               "type":"integer"
            }
         },
         "Filter":{
            "description":"Select items in collection by given conditions.",
            "in":"query",
            "name":"filter",
            "required":false,
            "content":{
               "application/json":{
                  "schema":{
                     "type":"object",
                     "example":{
                        "<field>":{
                           "<operator>":"<value>"
                        }
                     }
                  }
               }
            }
         },
         "Fields":{
            "description":"Control what fields are being returned in the object.",
            "in":"query",
            "name":"fields",
            "required":false,
            "explode":false,
            "schema":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            }
         },
         "Export":{
            "name":"export",
            "description":"Saves the API response to a file. Accepts one of \"csv\", \"json\", \"xml\", \"yaml\".",
            "in":"query",
            "required":false,
            "schema":{
               "type":"string",
               "enum":[
                  "csv",
                  "json",
                  "xml",
                  "yaml"
               ]
            }
         },
         "Version":{
            "name":"version",
            "description":"Retrieve an item's state from a specific Content Version. The value corresponds to the \"key\" of the Content Version.\n",
            "in":"query",
            "required":false,
            "schema":{
               "type":"string"
            }
         }
      },
      "responses":{
         "NotFoundError":{
            "description":"Error: Not found.",
            "content":{
               "application/json":{
                  "schema":{
                     "type":"object",
                     "properties":{
                        "error":{
                           "type":"object",
                           "properties":{
                              "code":{
                                 "type":"integer",
                                 "format":"int64"
                              },
                              "message":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "UnauthorizedError":{
            "description":"Error: Unauthorized request",
            "content":{
               "application/json":{
                  "schema":{
                     "type":"object",
                     "properties":{
                        "error":{
                           "type":"object",
                           "properties":{
                              "code":{
                                 "type":"integer",
                                 "format":"int64"
                              },
                              "message":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "securitySchemes":{
         "KeyAuth":{
            "type":"apiKey",
            "in":"query",
            "name":"access_token"
         },
         "Auth":{
            "type":"apiKey",
            "in":"header",
            "name":"Authorization"
         }
      }
   }
}